<template>
	<view class="change-password">
		<view class="form-wrap">
			<view class="form-item">
				<input v-model="oldPassword" class="form-input" placeholder-class="form-input-placeholder"
					:type="showOldPwd ? 'text' : 'password'" placeholder="请输入原密码" maxlength="16">
				<view class="eye-icon" @click="handleShowPwd('showOldPwd')">
					<u-icon :name="showOldPwd ? 'eye' : 'eye-off'" size="40" />
				</view>
			</view>
			<view class="form-item">
				<input v-model="newPassword" class="form-input" placeholder-class="form-input-placeholder"
					:type="showNewPwd ? 'text' : 'password'" placeholder="请输入新密码" maxlength="16">
				<view class="eye-icon" @click="handleShowPwd('showNewPwd')">
					<u-icon :name="showNewPwd ? 'eye' : 'eye-off'" size="40" />
				</view>
			</view>
			<view class="form-item">
				<input v-model="repeatPassword" class="form-input" placeholder-class="form-input-placeholder"
					:type="showRepeatPwd ? 'text' : 'password'" placeholder="请重复您的新密码" maxlength="16">
				<view class="eye-icon" @click="handleShowPwd('showRepeatPwd')">
					<u-icon :name="showRepeatPwd ? 'eye' : 'eye-off'" size="40" />
				</view>
			</view>
		</view>
		<!-- 按钮模块 -->
		<u-button :disabled="loading" :loading="loading" loading-text="修改中" size="large" @click="determine" text="确定" />
	</view>
</template>

<script>
	// 密码的正则验证
	let passwordReg = /^.{6,18}$/;
	export default {
		data() {
			return {
				oldPassword: '', //老密码
				newPassword: '', //新密码
				repeatPassword: '', //重复密码
				loading: false, //是否修改中
				showOldPwd: false, //是否展示密码
				showNewPwd: false, //是否展示密码
				showRepeatPwd: false, //是否展示密码
			};
		},
		methods: {
			/**
			 * 确定
			 */
			determine() {
				// 对于密码的公共判断方法
				if (!passwordReg.test(this.oldPassword) || !passwordReg.test(this.newPassword) || !passwordReg.test(this
						.repeatPassword)) {
					uni.$u.toast('请输入6-18位的密码');
					return;
				}
				if (this.newPassword != this.repeatPassword) {
					uni.$u.toast('新密码两次输入的密码不一致');
					return
				}
				this.updatePassword()
			},
			/**
			 * 修改密码
			 */
			updatePassword() {
				this.loading = true
				uni.$u.api.user.changePwd({
					oldPassword: uni.$u.md5.md5(this.oldPassword),
					newPassword: uni.$u.md5.md5(this.newPassword),
				}).then(res => {
					uni.$u.toast('修改密码成功');
					uni.setStorageSync("loginInfo", {
						userName: '',
						passWord: '',
						remeberPwd: false
					})
					setTimeout(() => {
						uni.navigateBack({
							delta: 1
						});
					}, 2000)
				}).catch(err => {
					this.loading = false
				})
			},
			/**
			 * 控制密码显示
			 */
			handleShowPwd(type) {
				this[type] = !this[type]
			}
		}
	}
</script>

<style scoped lang="scss">
	.change-password {
		padding: 0 70rpx;
	}

	.form-wrap {
		padding-top: 100rpx;
		margin-bottom: 80rpx;
	}

	.form-item {
		height: 120rpx;
		border-bottom: 1px solid #e6e6e6;
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.form-input {
		font-size: 40rpx;
		color: #222222;
		flex: 1;
		/* #ifndef APP-PLUS */
		border: none;
		/* #endif */
	}

	.eye-icon {
		height: 100rpx;
		padding: 0 28rpx;
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.eye-img {
		width: 26rpx;
		height: 18rpx;
	}

	.form-input-placeholder {
		color: #bbbbbb;
	}
</style>
